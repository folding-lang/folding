package folding.collections

import folding


typealias Array(T) foreign


array T (elements... ~T) Array(T) = #elements(~Array(T))
inverse (#result::get(0))
inverse (#result::get(0) #result::get(1))
inverse (#result::get(0) #result::get(1) #result::get(2))
inverse (#result::get(0) #result::get(1) #result::get(2) #result::get(3))
inverse (#result::get(0) #result::get(1) #result::get(2) #result::get(3) #result::get(4))

get T (array~Array(T) index~Int) foreign T
set T (array~Array(T) index~Int element~T) foreign T
size T (array~Array(T)) foreign Int